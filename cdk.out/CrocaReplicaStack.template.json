{
  "Resources": {
    "CrocaReplicaBusB8B9DFE0": {
      "Type": "AWS::Events::EventBus",
      "Properties": {
        "Name": "croca-replica"
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/CrocaReplicaBus/Resource"
      }
    },
    "ReplicaPolicy": {
      "Type": "AWS::Events::EventBusPolicy",
      "Properties": {
        "StatementId": "CrocaReplicaStatement",
        "Action": "events:PutEvents",
        "EventBusName": "croca-replica",
        "Principal": "929831892372"
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/ReplicaPolicy"
      }
    },
    "CodeBuildRole728CBADE": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "codebuild.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          "arn:aws:iam::aws:policy/AWSCodeCommitFullAccess",
          "arn:aws:iam::aws:policy/CloudWatchLogsFullAccess"
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/CodeBuildRole/Resource"
      }
    },
    "CodeBuildRoleDefaultPolicy829527DE": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "testmainapnortheast1ReplicationRuleSyncProject63D8AA67"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "testmainapnortheast1ReplicationRuleSyncProject63D8AA67"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "testmainapnortheast1ReplicationRuleSyncProject63D8AA67"
                    },
                    "-*"
                  ]
                ]
              }
            },
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": [
                "logs:CreateLogGroup",
                "logs:CreateLogStream",
                "logs:PutLogEvents"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "testmainuswest2ReplicationRuleSyncProjectCFB83484"
                      }
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":logs:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":",
                      {
                        "Ref": "AWS::AccountId"
                      },
                      ":log-group:/aws/codebuild/",
                      {
                        "Ref": "testmainuswest2ReplicationRuleSyncProjectCFB83484"
                      },
                      ":*"
                    ]
                  ]
                }
              ]
            },
            {
              "Action": [
                "codebuild:CreateReportGroup",
                "codebuild:CreateReport",
                "codebuild:UpdateReport",
                "codebuild:BatchPutTestCases",
                "codebuild:BatchPutCodeCoverages"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":codebuild:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":report-group/",
                    {
                      "Ref": "testmainuswest2ReplicationRuleSyncProjectCFB83484"
                    },
                    "-*"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "CodeBuildRoleDefaultPolicy829527DE",
        "Roles": [
          {
            "Ref": "CodeBuildRole728CBADE"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/CodeBuildRole/DefaultPolicy/Resource"
      }
    },
    "testmainapnortheast1ReplicationRuleReplicaLogGroup805A9102": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-ap-northeast-1-ReplicationRule/ReplicaLogGroup/Resource"
      }
    },
    "testmainapnortheast1ReplicationRuleSyncProject63D8AA67": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CodeBuildRole728CBADE",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"pip install git-remote-codecommit\",\n        \"aws sts get-caller-identity\",\n        \"export ORIG_AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\",\n        \"export ORIG_AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY\",\n        \"export ORIG_AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN\"\n      ]\n    },\n    \"pre_build\": {\n      \"commands\": [\n        \"aws sts assume-role --role-arn arn:aws:iam::929831892372:role/CrocaCodecommitReplication --role-session-name CrocaCode | jq '.Credentials' -r > amz.auth.json\",\n        \"cat amz.auth.json\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"export AWS_ACCESS_KEY_ID=$(cat amz.auth.json | jq '.AccessKeyId' -r)\",\n        \"export AWS_SECRET_ACCESS_KEY=$(cat amz.auth.json | jq '.SecretAccessKey' -r)\",\n        \"export AWS_SESSION_TOKEN=$(cat amz.auth.json | jq '.SessionToken' -r)\",\n        \"aws sts get-caller-identity\",\n        \"git clone --mirror codecommit::ap-northeast-2://test test\",\n        \"cd test\",\n        \"export AWS_ACCESS_KEY_ID=$ORIG_AWS_ACCESS_KEY_ID\",\n        \"export AWS_SECRET_ACCESS_KEY=$ORIG_AWS_SECRET_ACCESS_KEY\",\n        \"export AWS_SESSION_TOKEN=$ORIG_AWS_SESSION_TOKEN\",\n        \"aws sts get-caller-identity\",\n        \"git remote set-url --push origin codecommit::ap-northeast-1://test\",\n        \"git push origin\",\n        \"cd ..\"\n      ]\n    }\n  }\n}",
          "Type": "NO_SOURCE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-ap-northeast-1-ReplicationRule/SyncProject/Resource"
      }
    },
    "testmainapnortheast1ReplicationRuleSyncProjectEventsRole887669AA": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-ap-northeast-1-ReplicationRule/SyncProject/EventsRole/Resource"
      }
    },
    "testmainapnortheast1ReplicationRuleSyncProjectEventsRoleDefaultPolicy0331B7A0": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testmainapnortheast1ReplicationRuleSyncProject63D8AA67",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testmainapnortheast1ReplicationRuleSyncProjectEventsRoleDefaultPolicy0331B7A0",
        "Roles": [
          {
            "Ref": "testmainapnortheast1ReplicationRuleSyncProjectEventsRole887669AA"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-ap-northeast-1-ReplicationRule/SyncProject/EventsRole/DefaultPolicy/Resource"
      }
    },
    "testmainapnortheast1ReplicationRuleReplicaRuleE87C4615": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "CrocaReplicaBusB8B9DFE0"
        },
        "EventPattern": {
          "source": [
            "aws.codecommit"
          ],
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated"
            ],
            "repositoryName": [
              "test"
            ],
            "referenceName": [
              "main"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":logs:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":log-group:",
                  {
                    "Ref": "testmainapnortheast1ReplicationRuleReplicaLogGroup805A9102"
                  }
                ]
              ]
            },
            "Id": "Target0"
          },
          {
            "Arn": {
              "Fn::GetAtt": [
                "testmainapnortheast1ReplicationRuleSyncProject63D8AA67",
                "Arn"
              ]
            },
            "Id": "Target1",
            "RoleArn": {
              "Fn::GetAtt": [
                "testmainapnortheast1ReplicationRuleSyncProjectEventsRole887669AA",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-ap-northeast-1-ReplicationRule/ReplicaRule/Resource"
      }
    },
    "EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75BCustomResourcePolicy00FEDC81": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "logs:PutResourcePolicy",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "logs:DeleteResourcePolicy",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75BCustomResourcePolicy00FEDC81",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B/CustomResourcePolicy/Resource"
      }
    },
    "EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B00334F61": {
      "Type": "Custom::CloudwatchLogResourcePolicy",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CloudWatchLogs\",\"action\":\"putResourcePolicy\",\"parameters\":{\"policyName\":\"CrocaReplicaStackEventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B7F34A263\",\"policyDocument\":\"{\\\"Statement\\\":[{\\\"Action\\\":[\\\"logs:PutLogEvents\\\",\\\"logs:CreateLogStream\\\"],\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"events.amazonaws.com\\\"},\\\"Resource\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "testmainapnortheast1ReplicationRuleReplicaLogGroup805A9102",
                  "Arn"
                ]
              },
              "\\\"}],\\\"Version\\\":\\\"2012-10-17\\\"}\"},\"physicalResourceId\":{\"id\":\"EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B\"}}"
            ]
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CloudWatchLogs\",\"action\":\"putResourcePolicy\",\"parameters\":{\"policyName\":\"CrocaReplicaStackEventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B7F34A263\",\"policyDocument\":\"{\\\"Statement\\\":[{\\\"Action\\\":[\\\"logs:PutLogEvents\\\",\\\"logs:CreateLogStream\\\"],\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"events.amazonaws.com\\\"},\\\"Resource\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "testmainapnortheast1ReplicationRuleReplicaLogGroup805A9102",
                  "Arn"
                ]
              },
              "\\\"}],\\\"Version\\\":\\\"2012-10-17\\\"}\"},\"physicalResourceId\":{\"id\":\"EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B\"}}"
            ]
          ]
        },
        "Delete": "{\"service\":\"CloudWatchLogs\",\"action\":\"deleteResourcePolicy\",\"parameters\":{\"policyName\":\"CrocaReplicaStackEventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B7F34A263\"},\"ignoreErrorCodesMatching\":\"400\"}",
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75BCustomResourcePolicy00FEDC81"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/EventsLogGroupPolicyCrocaReplicaStacktestmainapnortheast1ReplicationRuleReplicaRuleD8E0B75B/Resource/Default"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/AWS679f53fac002430cb0da5b7982bd2287/ServiceRole/Resource"
      }
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3BucketDDD15B67"
          },
          "S3Key": {
            "Fn::Join": [
              "",
              [
                {
                  "Fn::Select": [
                    0,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3VersionKey76284988"
                        }
                      ]
                    }
                  ]
                },
                {
                  "Fn::Select": [
                    1,
                    {
                      "Fn::Split": [
                        "||",
                        {
                          "Ref": "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3VersionKey76284988"
                        }
                      ]
                    }
                  ]
                }
              ]
            ]
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn"
          ]
        },
        "Handler": "index.handler",
        "Runtime": "nodejs12.x",
        "Timeout": 120
      },
      "DependsOn": [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
      ],
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/AWS679f53fac002430cb0da5b7982bd2287/Resource",
        "aws:asset:path": "asset.a5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04d",
        "aws:asset:property": "Code"
      }
    },
    "testmainuswest2ReplicationRuleReplicaLogGroup4248C0E3": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "RetentionInDays": 731
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-us-west-2-ReplicationRule/ReplicaLogGroup/Resource"
      }
    },
    "testmainuswest2ReplicationRuleSyncProjectCFB83484": {
      "Type": "AWS::CodeBuild::Project",
      "Properties": {
        "Artifacts": {
          "Type": "NO_ARTIFACTS"
        },
        "Environment": {
          "ComputeType": "BUILD_GENERAL1_SMALL",
          "Image": "aws/codebuild/standard:5.0",
          "ImagePullCredentialsType": "CODEBUILD",
          "PrivilegedMode": false,
          "Type": "LINUX_CONTAINER"
        },
        "ServiceRole": {
          "Fn::GetAtt": [
            "CodeBuildRole728CBADE",
            "Arn"
          ]
        },
        "Source": {
          "BuildSpec": "{\n  \"version\": \"0.2\",\n  \"phases\": {\n    \"install\": {\n      \"commands\": [\n        \"pip install git-remote-codecommit\",\n        \"aws sts get-caller-identity\",\n        \"export ORIG_AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID\",\n        \"export ORIG_AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY\",\n        \"export ORIG_AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN\"\n      ]\n    },\n    \"pre_build\": {\n      \"commands\": [\n        \"aws sts assume-role --role-arn arn:aws:iam::929831892372:role/CrocaCodecommitReplication --role-session-name CrocaCode | jq '.Credentials' -r > amz.auth.json\",\n        \"cat amz.auth.json\"\n      ]\n    },\n    \"build\": {\n      \"commands\": [\n        \"export AWS_ACCESS_KEY_ID=$(cat amz.auth.json | jq '.AccessKeyId' -r)\",\n        \"export AWS_SECRET_ACCESS_KEY=$(cat amz.auth.json | jq '.SecretAccessKey' -r)\",\n        \"export AWS_SESSION_TOKEN=$(cat amz.auth.json | jq '.SessionToken' -r)\",\n        \"aws sts get-caller-identity\",\n        \"git clone --mirror codecommit::ap-northeast-2://test test\",\n        \"cd test\",\n        \"export AWS_ACCESS_KEY_ID=$ORIG_AWS_ACCESS_KEY_ID\",\n        \"export AWS_SECRET_ACCESS_KEY=$ORIG_AWS_SECRET_ACCESS_KEY\",\n        \"export AWS_SESSION_TOKEN=$ORIG_AWS_SESSION_TOKEN\",\n        \"aws sts get-caller-identity\",\n        \"git remote set-url --push origin codecommit::us-west-2://test\",\n        \"git push origin\",\n        \"cd ..\"\n      ]\n    }\n  }\n}",
          "Type": "NO_SOURCE"
        },
        "EncryptionKey": "alias/aws/s3"
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-us-west-2-ReplicationRule/SyncProject/Resource"
      }
    },
    "testmainuswest2ReplicationRuleSyncProjectEventsRole09A6C850": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-us-west-2-ReplicationRule/SyncProject/EventsRole/Resource"
      }
    },
    "testmainuswest2ReplicationRuleSyncProjectEventsRoleDefaultPolicy14F82627": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "codebuild:StartBuild",
              "Effect": "Allow",
              "Resource": {
                "Fn::GetAtt": [
                  "testmainuswest2ReplicationRuleSyncProjectCFB83484",
                  "Arn"
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "testmainuswest2ReplicationRuleSyncProjectEventsRoleDefaultPolicy14F82627",
        "Roles": [
          {
            "Ref": "testmainuswest2ReplicationRuleSyncProjectEventsRole09A6C850"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-us-west-2-ReplicationRule/SyncProject/EventsRole/DefaultPolicy/Resource"
      }
    },
    "testmainuswest2ReplicationRuleReplicaRule43AB4559": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "EventBusName": {
          "Ref": "CrocaReplicaBusB8B9DFE0"
        },
        "EventPattern": {
          "source": [
            "aws.codecommit"
          ],
          "detail": {
            "event": [
              "referenceCreated",
              "referenceUpdated"
            ],
            "repositoryName": [
              "test"
            ],
            "referenceName": [
              "main"
            ]
          }
        },
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":logs:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":log-group:",
                  {
                    "Ref": "testmainuswest2ReplicationRuleReplicaLogGroup4248C0E3"
                  }
                ]
              ]
            },
            "Id": "Target0"
          },
          {
            "Arn": {
              "Fn::GetAtt": [
                "testmainuswest2ReplicationRuleSyncProjectCFB83484",
                "Arn"
              ]
            },
            "Id": "Target1",
            "RoleArn": {
              "Fn::GetAtt": [
                "testmainuswest2ReplicationRuleSyncProjectEventsRole09A6C850",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/test-main-us-west-2-ReplicationRule/ReplicaRule/Resource"
      }
    },
    "EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596CustomResourcePolicyF80FE633": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "logs:PutResourcePolicy",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "logs:DeleteResourcePolicy",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596CustomResourcePolicyF80FE633",
        "Roles": [
          {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596/CustomResourcePolicy/Resource"
      }
    },
    "EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596180CF6F5": {
      "Type": "Custom::CloudwatchLogResourcePolicy",
      "Properties": {
        "ServiceToken": {
          "Fn::GetAtt": [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn"
          ]
        },
        "Create": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CloudWatchLogs\",\"action\":\"putResourcePolicy\",\"parameters\":{\"policyName\":\"CrocaReplicaStackEventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596F6AAB764\",\"policyDocument\":\"{\\\"Statement\\\":[{\\\"Action\\\":[\\\"logs:PutLogEvents\\\",\\\"logs:CreateLogStream\\\"],\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"events.amazonaws.com\\\"},\\\"Resource\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "testmainuswest2ReplicationRuleReplicaLogGroup4248C0E3",
                  "Arn"
                ]
              },
              "\\\"}],\\\"Version\\\":\\\"2012-10-17\\\"}\"},\"physicalResourceId\":{\"id\":\"EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596\"}}"
            ]
          ]
        },
        "Update": {
          "Fn::Join": [
            "",
            [
              "{\"service\":\"CloudWatchLogs\",\"action\":\"putResourcePolicy\",\"parameters\":{\"policyName\":\"CrocaReplicaStackEventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596F6AAB764\",\"policyDocument\":\"{\\\"Statement\\\":[{\\\"Action\\\":[\\\"logs:PutLogEvents\\\",\\\"logs:CreateLogStream\\\"],\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"Service\\\":\\\"events.amazonaws.com\\\"},\\\"Resource\\\":\\\"",
              {
                "Fn::GetAtt": [
                  "testmainuswest2ReplicationRuleReplicaLogGroup4248C0E3",
                  "Arn"
                ]
              },
              "\\\"}],\\\"Version\\\":\\\"2012-10-17\\\"}\"},\"physicalResourceId\":{\"id\":\"EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596\"}}"
            ]
          ]
        },
        "Delete": "{\"service\":\"CloudWatchLogs\",\"action\":\"deleteResourcePolicy\",\"parameters\":{\"policyName\":\"CrocaReplicaStackEventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596F6AAB764\"},\"ignoreErrorCodesMatching\":\"400\"}",
        "InstallLatestAwsSdk": true
      },
      "DependsOn": [
        "EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596CustomResourcePolicyF80FE633"
      ],
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete",
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/EventsLogGroupPolicyCrocaReplicaStacktestmainuswest2ReplicationRuleReplicaRule7D825596/Resource/Default"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAAE21Ry07DMBD8Fu4bl6gIiRsQARcOUfgC11kip4kXee1WyPK/s07SCiROM96dfY1r9bBXtzeP+syV6Y+7ZMijSh9BmyM05Dj4aAI0kQPNHTJFbxCaT3flT8wYRD9YN8BvRau9njGgLw9p1dtgyWUooxKe0AVW6aXgc+Si+Y+3NFnzDV2c1qmCGayeVepoCxXcZGXqwjJMNEj7dxrePMWvkrnwDIZ6PEQ79Sq1nkYsB0rlSqVUz4deiwly0YSB3Gt0puwOVyLyC8/A+0oXE1gtXkj/xa3Kb2ZI/Mx/HczgZAc18u5U36n6Xr5gZGsrH12wM6puxR+QsrrvngEAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "CrocaReplicaStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Parameters": {
    "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3BucketDDD15B67": {
      "Type": "String",
      "Description": "S3 bucket for asset \"a5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04d\""
    },
    "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dS3VersionKey76284988": {
      "Type": "String",
      "Description": "S3 key for asset version \"a5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04d\""
    },
    "AssetParametersa5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04dArtifactHashBC261AD6": {
      "Type": "String",
      "Description": "Artifact hash for asset \"a5a55f40f05c1031f30cc935c76b58b0b7dbc81e70845edf4ef615d6580ae04d\""
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  }
}